openapi: 3.0.3
info:
  title: Recepies API documentation
  description: |-
    This is an API for the recepies assignment. \
    Two routes: Recepies and Users. \
    Recepies route contains 5 endpoints. \
    Users route contains 7 endpoints.
  version: 1.0.1
externalDocs:
  description: Swagger documentation
  url: http://swagger.io
servers:
- url: /
tags:
- name: recepies
  description: Everything about your Pets
- name: users
  description: Operations about user
paths:
  /recepies:
    post:
      tags:
      - recepies
      summary: Create new recepie to the web
      description: Add a new recepie to the web
      operationId: addRecepie
      requestBody:
        description: Create a new recepie object in the web
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recepie'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recepie'
        "405":
          description: Invalid input
      x-swagger-router-controller: Recepies
  /recepies/{name}:
    get:
      tags:
      - recepies
      summary: Get recepie by name
      description: provide name of recepie then get recepie object
      operationId: findRecepieByName
      parameters:
      - name: name
        in: path
        description: Status values that need to be considered for filter
        required: true
        style: simple
        explode: true
        schema:
          type: string
          default: default
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Recepies
  /recepies/random:
    get:
      tags:
      - recepies
      summary: Get 3 random recepies
      description: "get 3 random recepies from all recepies in the server, without\
        \ provide any parameter."
      operationId: getThreeRandomRecepiesNoParametersNeeded
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Recepies
  /recepies/randomP:
    get:
      tags:
      - recepies
      summary: "Get 3 random recepies, except the recepies specified in path."
      description: "get 3 random recepies from all recepies in the server, without\
        \ provide any parameter."
      operationId: getThreeRandomRecepiesWithParametersNeeded
      parameters:
      - name: arrayOfThreeCurrentDisplayedRecepies
        in: query
        description: array of three current displayed recepies
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example:
        - first recepie
        - second recepie
        - third recepie
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Recepies
  /recepies/Limit:
    get:
      tags:
      - recepies
      summary: "Get X recepies, depends on users Limit attribute."
      description: "Each user have `Limit` attribute which can have the value of 5\
        \ or 10 or 15. Regarding the specific user, the server will retrive the amount\
        \ of recepies."
      operationId: getXrecepies
      parameters:
      - name: userId
        in: query
        description: User identifier
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 5
          default: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Recepies
  /users:
    post:
      tags:
      - users
      summary: Create new user
      description: Add a new user to the system
      operationId: addUser
      requestBody:
        description: Create new user object in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "405":
          description: Invalid input
      x-swagger-router-controller: Users
  /users/limit:
    put:
      tags:
      - users
      summary: Update users search-limit value
      description: This can only be done by the logged in user.
      operationId: updateUsersLimit
      parameters:
      - name: limit
        in: query
        description: New limit value
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 10
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Users
  /users/login:
    get:
      tags:
      - users
      summary: Logs user into the system
      description: ""
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Invalid username/password supplied
      x-swagger-router-controller: Users
  /users/lastwatched:
    get:
      tags:
      - users
      summary: Get 3 last watched recepies
      description: ""
      operationId: userLastWatchedRecepies
      parameters:
      - name: userId
        in: query
        description: The loggedIn user id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Users
  /users/myrecepies:
    get:
      tags:
      - users
      summary: Get all the user's recepies
      description: ""
      operationId: allUserRecepies
      parameters:
      - name: userId
        in: query
        description: The loggedIn user id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Users
  /users/myrecepies/favorites:
    get:
      tags:
      - users
      summary: Get all favorites
      description: ""
      operationId: usersFavoriteRecepies
      parameters:
      - name: userId
        in: query
        description: The loggedIn user id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Users
  /users/myrecepies/family:
    get:
      tags:
      - users
      summary: Get all my family recepies
      description: ""
      operationId: usersFamilyRecepies
      parameters:
      - name: userId
        in: query
        description: The loggedIn user id
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recepie'
        "400":
          description: Invalid status value
      x-swagger-router-controller: Users
components:
  schemas:
    Recepie:
      required:
      - id
      - instructions
      - isGlutenFree
      - isVegan
      - name
      type: object
      properties:
        id:
          type: integer
          description: Recepie identifier
          format: int64
          example: 100
        name:
          type: string
          description: Recepie's name
          example: Hamburger
        duration:
          type: integer
          description: Duration in minutes
          format: int64
          example: 60
        dishes:
          type: integer
          description: How many dishes can be made
          format: int64
          example: 2
        isVegan:
          type: boolean
          description: Is the dish vegan or not
          example: true
        isGlutenFree:
          type: boolean
          description: Is the dish gluten free or not
          example: true
        instructions:
          type: array
          example:
          - first
          - second
          - third
          items:
            type: string
        popularity:
          type: integer
          description: Recepie's popularity between 1-100
          format: int64
          example: 95
        isViewed:
          type: boolean
          description: Is recepies viewed by the user. Can be empty.
          example: false
        hasBeenSaved:
          type: boolean
          description: Has been viewed by the user. Can be empty.
          example: false
      example:
        duration: 60
        instructions:
        - first
        - second
        - third
        popularity: 95
        hasBeenSaved: false
        name: Hamburger
        isGlutenFree: true
        dishes: 2
        id: 100
        isVegan: true
        isViewed: false
    User:
      required:
      - country
      - email
      - firtName
      - lastName
      - password
      - userId
      - userName
      type: object
      properties:
        userId:
          type: integer
          description: Recepie identifier
          format: int64
          example: 100
        userName:
          type: integer
          description: Recepie identifier
          format: int64
          example: 100
        firtName:
          type: string
          description: Recepie's name
          example: Hamburger
        lastName:
          type: integer
          description: Duration in minutes
          format: int64
          example: 60
        country:
          type: integer
          description: How many dishes can be made
          format: int64
          example: 2
        password:
          type: boolean
          description: Is the dish vegan or not
          example: true
        email:
          type: boolean
          description: Is the dish gluten free or not
          example: true
        limit:
          type: integer
          format: int64
          example: 5
          default: 5
      example:
        lastName: 60
        country: 2
        password: true
        firtName: Hamburger
        limit: 5
        userName: 100
        userId: 100
        email: true
      xml:
        name: Recepie
